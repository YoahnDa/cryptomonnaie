crypto-trading-platform/
├── public/
│   └── vite.svg
├── src/
│   ├── assets/
│   │   └── vue.svg
│   ├── components/
│   │   ├── Footer.vue        # Pied de page avec copyright
│   │   ├── HelloWorld.vue    
│   │   └── Navbar.vue        # Barre de navigation
│   ├── services/
│   │   ├── authService.ts    # Service d'authentification 
│   │   └── cryptoService.ts  # Service pour les cryptomonnaies
│   ├── views/
│   │   ├── Home.vue         # Page d'accueil avec résumé du portefeuille
│   │   ├── Login.vue        # Page de connexion avec 2FA
│   │   ├── Register.vue     # Page d'inscription
│   │   ├── Wallet.vue       # Gestion du portefeuille
│   │   ├── Trade.vue        # Page d'achat/vente de cryptos
│   │   └── Market.vue       # Page des cours en temps réel
│   ├── router/
│   │   └── index.ts         # Configuration des routes
│   ├── App.vue              # Composant racine
│   ├── main.ts             # Point d'entrée de l'application
│   ├── style.css           # Styles globaux
│   └── vite-env.d.ts       # Types pour Vite
├── index.html              # Page HTML principale
├── package.json           # Dépendances et scripts
├── postcss.config.js      # Configuration PostCSS
├── README.md              # Documentation
├── tailwind.config.js     # Configuration Tailwind CSS
├── tsconfig.app.json      # Configuration TypeScript pour l'app
├── tsconfig.json          # Configuration TypeScript principale
├── tsconfig.node.json     # Configuration TypeScript pour Node
└── vite.config.ts         # Configuration Vite

Principales fonctionnalités :

1. Authentification
   - Inscription avec validation email
   - Connexion avec authentification 2FA
   - Validation par PIN envoyé par email

2. Gestion du portefeuille
   - Affichage du solde
   - Dépôt/retrait de fonds
   - Historique des transactions

3. Trading
   - Achat/vente de cryptomonnaies
   - Cours en temps réel
   - Graphiques d'évolution

4. Market Data
   - Tableau des cours
   - Mise à jour en temps réel (10s)
   - Graphiques interactifs avec Chart.js

Technologies utilisées :
- Vue 3 avec TypeScript
- Vue Router pour la navigation
- Pinia pour la gestion d'état
- Axios pour les appels API
- Chart.js pour les graphiques
- Tailwind CSS pour le style
- Vee-validate pour la validation des formulaires
